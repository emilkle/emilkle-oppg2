name: Deploy Infrastructure to Production

on:
  pull_request:
    branches:
      - main
    paths:
      - 'emilkle-oppg2/**'
  workflow_dispatch:
    inputs:
      action_type:
        description: 'What terraform action do you want to perform? (apply/destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - 'apply'
          - 'destroy'

env: 
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  GH_TOKEN: ${{ github.token }}
  AZURE_SQL_SERVER_NAME: "mssql-e-commerce-db-server"
  AZURE_SQL_DATABASE_NAME: "mssql-e-commerce-db"
  AZURE_SQL_ADMIN_USER: "4dm1n157r470r"
  AZURE_SQL_ADMIN_PASSWORD: "4-v3ry-53cr37-p455w0rd"
  SQL_FILE: ./emilkle-oppg2/sql/product_and_user_data.sql
  WORKING_DIR: .
  REVIEWER: "emilkle"
  ASSIGNEE: "emilkle"

jobs:
  prod_stage:
    runs-on: ubuntu-22.04
    environment:
        name: production  
    steps:
      - name: Checkout  
        uses: actions/checkout@v4
              
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
    
      - name: Terraform workspace select prod or terraform workspace new prod
        run: terraform workspace select prod || terraform workspace new prod
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform plan prod 
        if: github.event.inputs.action_type == 'apply'
        run: terraform plan
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply prod
        if: github.event.inputs.action_type == 'apply'
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}
    
      - name: Terraform destroy prod 
        if: github.event.inputs.action_type == 'destroy'
        run: terraform destroy -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

      - name: Insert sql data
        if: github.event.inputs.action_type == 'apply'
        run: |
          # Execute the SQL script
          az sql db query \
            --server ${{ env.AZURE_SQL_SERVER_NAME }} \
            --database ${{ env.AZURE_SQL_DATABASE_NAME }} \
            --admin-user ${{ env.AZURE_SQL_ADMIN_USER }} \
            --admin-password ${{ env.AZURE_SQL_ADMIN_PASSWORD }} \
            --query-file ${{ env.SQL_FILE }}
